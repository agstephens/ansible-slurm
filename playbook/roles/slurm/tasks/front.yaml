---
  - name: Copy 'is_cluster_ready' file
    copy: dest=/bin/is_cluster_ready src=is_cluster_ready mode=0755 force=no

  - name: Update the /etc/hosts file
    shell: |
        for item in {{ worker_nodes }}; do
          grep -q "\<${item}\>" /etc/hosts || echo "127.0.0.1 ${item}.localdomain ${item}" >> /etc/hosts;
        done

  - name: Create the slurm.conf file
    template: dest={{ SLURM_CONF }} src=slurm.conf.j2

  - name: Set blcr config in SLURM
    lineinfile: dest={{ SLURM_CONF }} regexp='#CheckpointType=' line='CheckpointType=checkpoint/blcr' state=present
    when: "'blcr' in templates"

  - name: configure compute nodes section of slurm.conf
    lineinfile: dest={{ SLURM_CONF }}  regexp='NodeName=' line='NodeName={{ worker_nodes[0] }} CPUs={{slurm_wn_cpus}} State=UNKNOWN' state=present

  - name: configure partition section of slurm.conf
    lineinfile: dest={{ SLURM_CONF }} regexp='PartitionName=' line='PartitionName=debug Nodes={{ worker_nodes[0] }} Default=YES MaxTime=INFINITE State=UP' state=present

  - name: Start SLURM service
    become: true
    become_user: slurm
    command: slurmctld

  - name: Ensure slurmd is not running in front node
    shell: pgrep slurmd && killall slurmd
    ignore_errors: yes

  - name: Reconfigure SLURM
    become: true
    become_user: slurm
    command: scontrol reconfigure

  - name: allow the slurm user to acces the slurm logs
    file: path=/tmp/slurmctld.log mode=0644

  - name: copy the slurm.conf from server to local cache
    fetch:
      src: "{{ SLURM_CONF }}"
      dest: "{{ local_slurm_cache }}/slurm.conf"
      flat: yes
